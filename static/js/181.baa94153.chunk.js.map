{"version":3,"file":"static/js/181.baa94153.chunk.js","mappings":"mPA+BA,EA1Ba,WACT,IACA,ECJ2B,SAAAA,GAC3B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACrC,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACZ,CDJ4BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAER,OACI,0BACI,SAAC,KAAD,UACKA,EAAaQ,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,GAAGC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACvC,OACI,2BACI,gBAAKC,MAAO,IAAKC,IAAG,0DAAqDJ,GACrEK,IAAKJ,KACT,uBAAIA,KACJ,uCAAeC,OAJVH,EAOhB,OAIhB,C,mMEvBDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,4CAECC,EAAW,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD3B,cACjBE,EADiB,yBAEhBA,EAAId,KAAKe,QAAQZ,KAAI,YACxB,MAAO,CAAEC,GADiC,EAAfA,GACdY,MAD6B,EAAXA,MAElC,KAJsB,2CAAH,qDAOXC,EAAY,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAAuCM,EAAvC,2BADM,cAClBJ,EADkB,yBAEjBA,EAAId,KAAKe,QAAQZ,KAAI,YACxB,MAAO,CAAEC,GADgC,EAAdA,GACdY,MAD4B,EAAVA,MAElC,KAJuB,2CAAH,sDAOZG,EAAe,mCAAG,WAAM1B,GAAN,uFACTkB,EAAAA,EAAAA,IAAA,iBAAoBlB,GAApB,OAA8BmB,EAA9B,oBADS,cACrBE,EADqB,yBAEpBA,EAAId,MAFgB,2CAAH,sDAKfF,EAAe,mCAAG,WAAML,GAAN,uFACTkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,mBAAsCmB,EAAtC,oBADS,cACrBE,EADqB,yBAEpBA,EAAId,KAAKoB,KAAKjB,KAAI,YACrB,MAAO,CAAEG,KADqD,EAAtCA,KACTC,UAD+C,EAAhCA,UACJF,aADoC,EAArBA,aACDD,GADsB,EAAPA,GAE1D,KAJ0B,2CAAH,sDAOfiB,EAAe,mCAAE,WAAM5B,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,mBAAsCmB,EAAtC,2BADQ,cACpBE,EADoB,yBAEnBA,EAAId,KAAKe,QAAQZ,KAAI,YACxB,MAAO,CAAEmB,OAD0C,EAAxBA,OACVC,QADkC,EAAhBA,QACTnB,GADyB,EAAPA,GAE/C,KAJyB,2CAAF,qD","sources":["components/Cast/Cast.jsx","utils/hooks/useMovieCredits.jsx","utils/api/fetchMovies.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'utils/hooks/useMovieCredits'\nimport PropTypes from 'prop-types';\nimport {List} from '../App.styled'\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const { movieCredits } = useMovieCredits(movieId);\n\n    return (\n        <div>\n            <List>\n                {movieCredits.map(({id,profile_path, name, character }) => {\n                    return (\n                        <li key={id}>\n                            <img width={100} src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${profile_path}`}\n                                alt={name} />\n                            <p>{name}</p>\n                            <p>Character: {character}</p>\n                        </li>\n                    )\n                })}\n            </List>\n        </div>\n    )\n}\n\nCast.propTypes = {\n    movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;","import { getMovieCredits } from '../api/fetchMovies';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieCredits = movieId => {\n    const [movieCredits, setMovieCredits] = useState([]);\n\n    useEffect(() => {\n        getMovieCredits(movieId).then(data => setMovieCredits(data));\n    }, [movieId]);\n\n    return { movieCredits };\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst KEY = '?api_key=65f73936914e96331bea5b0c7cf2b569';\n\nexport const getTrending = async () => {\n    const res = await axios.get(`/trending/movie/day${KEY}`);\n    return res.data.results.map(({ id, title })=> {\n        return { id, title }\n    })\n};\n\nexport const searchMovies = async search => {\n    const res = await axios.get(`/search/movie${KEY}&query=${search}&language=en-US&page=1`);\n    return res.data.results.map(({ id, title })=>{\n        return { id, title };\n    })\n}\n\nexport const getMovieDetails = async movieId => {\n    const res = await axios.get(`/movie/${movieId}${KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const getMovieCredits = async movieId => {\n    const res = await axios.get(`/movie/${movieId}/credits${KEY}&language=en-US`);\n    return res.data.cast.map(({ name, character, profile_path, id })=>{\n        return { name, character, profile_path, id };\n    })\n}\n\nexport const getMovieReviews= async movieId => {\n    const res = await axios.get(`/movie/${movieId}/reviews${KEY}&language=en-US&page=1`);\n    return res.data.results.map(({ author, content, id })=>{\n        return { author, content, id  };\n    })\n}"],"names":["movieId","useState","movieCredits","setMovieCredits","useEffect","getMovieCredits","then","data","useMovieCredits","useParams","map","id","profile_path","name","character","width","src","alt","axios","KEY","getTrending","res","results","title","searchMovies","search","getMovieDetails","cast","getMovieReviews","author","content"],"sourceRoot":""}