{"version":3,"file":"static/js/863.c264088f.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,EAAAA,GAAH,4EAKJC,GAAQD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,oI,SCLLG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACQ,SAACP,EAAD,UACKK,EAAOG,KAAI,SAAAC,GAAK,OACb,yBACI,SAACP,EAAD,CAAOQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAAhD,SACKG,EAAMK,SAFNL,EAAME,GADF,KAShC,C,mJCdYI,EAAOd,EAAAA,EAAAA,KAAH,yEAKJe,EAAQf,EAAAA,EAAAA,MAAH,kMAYLgB,EAAShB,EAAAA,EAAAA,OAAH,8W,SCbNiB,EAAY,WACrB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAYL,EAAaM,IAAI,UAC/BD,IACAE,EAAAA,EAAAA,IAAaF,GAAWG,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAAd,GAE5C,GAAE,CAACT,KAGA,4BACI,UAACL,EAAD,CAAMe,SAfO,SAAAC,GACjBV,EAAgB,CAAEW,OAAQD,EAAEE,OAAO,GAAGC,QACtCH,EAAEI,gBAEL,EAWO,WACI,SAACnB,EAAD,CAAOoB,KAAK,UACZ,SAACnB,EAAD,CAAQmB,KAAK,SAAb,wBAEJ,SAAChC,EAAA,EAAD,CAAYC,OAAQA,MAG/B,ECtBD,EARmB,WACf,OACI,0BACI,SAACa,EAAD,KAGX,C,mMCNDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,4CAECC,EAAW,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD3B,cACjBE,EADiB,yBAEhBA,EAAIC,KAAKC,QAAQlC,KAAI,YACxB,MAAO,CAAEG,GADiC,EAAfA,GACdG,MAD6B,EAAXA,MAElC,KAJsB,2CAAH,qDAOXa,EAAY,mCAAG,WAAMK,GAAN,uFACNK,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAAuCN,EAAvC,2BADM,cAClBQ,EADkB,yBAEjBA,EAAIC,KAAKC,QAAQlC,KAAI,YACxB,MAAO,CAAEG,GADgC,EAAdA,GACdG,MAD4B,EAAVA,MAElC,KAJuB,2CAAH,sDAOZ6B,EAAe,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,GAApB,OAA8BN,EAA9B,oBADS,cACrBE,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,mBAAsCN,EAAtC,oBADS,cACrBE,EADqB,yBAEpBA,EAAIC,KAAKK,KAAKtC,KAAI,YACrB,MAAO,CAAEuC,KADqD,EAAtCA,KACTC,UAD+C,EAAhCA,UACJC,aADoC,EAArBA,aACDtC,GADsB,EAAPA,GAE1D,KAJ0B,2CAAH,sDAOfuC,EAAe,mCAAE,WAAMN,GAAN,uFACRP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,mBAAsCN,EAAtC,2BADQ,cACpBE,EADoB,yBAEnBA,EAAIC,KAAKC,QAAQlC,KAAI,YACxB,MAAO,CAAE2C,OAD0C,EAAxBA,OACVC,QADkC,EAAhBA,QACTzC,GADyB,EAAPA,GAE/C,KAJyB,2CAAF,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","utils/api/fetchMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport {Link} from 'react-router-dom'\n\nexport const List = styled.ul`\nlist-style: circle;\nmargin-left: 20px;\npadding: 0;`\n\nexport const Movie = styled(Link)`\ndisplay: block;\ntext-decoration: none;\ncolor: black;\npadding: 5px;\n\n&:hover {\n    color: red;\n    }\n`","import { useLocation } from 'react-router-dom';\nimport { List, Movie } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n            <List>\n                {movies.map(movie => (\n                    <li key={movie.id}>\n                        <Movie to={`/movies/${movie.id}`} state={{from: location}}>\n                            {movie.title}\n                        </Movie>\n                    </li>)\n                )}\n            </List>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n display: flex;\n flex-wrap: wrap;\n gap: 10px;\n`\nexport const Input = styled.input`\npadding: 5px 8px;\nborder-radius: 8px;\nborder: 1px solid black;\nwidth: 100%;\nmin-width: 200px;\nmax-width: 300px;\noutline: none;\nbackground: #f4f4f4;\ncolor: #000;\n`\n\nexport const Button = styled.button`\ncursor: pointer;\npadding: 5px 8px;\nmin-width: 100px;\ncolor: #000;\nborder-radius: 8px;\nfont-weight: bold;\nbackground: #f4f4f4;\n  box-shadow:  2px 2px 4px rgba(0, 0, 0, 0.15),\n    -2px -2px 4px rgba(0, 0, 0, 0.15);\n     &:active{\n    box-shadow:  inset 2px 2px 4px rgba(0, 0, 0, 0.15),\n    inset -2px -2px 4px rgba(0, 0, 0, 0.15);}\n`","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../utils/api/fetchMovies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Button, Form, Input } from './Searchbar.styled'\n\nexport const SearchBar = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n\n    const handleSubmit = e => {\n        setSearchParams({ search: e.target[0].value });\n        e.preventDefault();\n        return;\n    }\n\n    useEffect(() => {\n        const movieName = searchParams.get('search');\n        if (movieName) {\n            searchMovies(movieName).then(response => setMovies(response));\n        }\n    }, [searchParams]);\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <Input type='text' />\n                <Button type='submit'>Search</Button>\n            </Form>\n            <MoviesList movies={movies} />\n        </div>\n    )\n}\n","import { SearchBar } from 'components/Searchbar/SearchBar';\n\nconst MoviesPage = () => {\n    return (\n        <div>\n            <SearchBar />\n        </div>\n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst KEY = '?api_key=65f73936914e96331bea5b0c7cf2b569';\n\nexport const getTrending = async () => {\n    const res = await axios.get(`/trending/movie/day${KEY}`);\n    return res.data.results.map(({ id, title })=> {\n        return { id, title }\n    })\n};\n\nexport const searchMovies = async search => {\n    const res = await axios.get(`/search/movie${KEY}&query=${search}&language=en-US&page=1`);\n    return res.data.results.map(({ id, title })=>{\n        return { id, title };\n    })\n}\n\nexport const getMovieDetails = async movieId => {\n    const res = await axios.get(`/movie/${movieId}${KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const getMovieCredits = async movieId => {\n    const res = await axios.get(`/movie/${movieId}/credits${KEY}&language=en-US`);\n    return res.data.cast.map(({ name, character, profile_path, id })=>{\n        return { name, character, profile_path, id };\n    })\n}\n\nexport const getMovieReviews= async movieId => {\n    const res = await axios.get(`/movie/${movieId}/reviews${KEY}&language=en-US&page=1`);\n    return res.data.results.map(({ author, content, id })=>{\n        return { author, content, id  };\n    })\n}"],"names":["List","styled","Movie","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Form","Input","Button","SearchBar","useSearchParams","searchParams","setSearchParams","useState","setMovies","useEffect","movieName","get","searchMovies","then","response","onSubmit","e","search","target","value","preventDefault","type","axios","KEY","getTrending","res","data","results","getMovieDetails","movieId","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}